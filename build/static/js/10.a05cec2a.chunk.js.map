{"version":3,"sources":["assets/svg/SVGArrowDown.js","components/ContextualInfo/index.js","pages/Pool/RemoveLiquidity.js"],"names":["SVGArrowDown","props","width","height","viewBox","fill","d","SummaryWrapper","styled","div","error","theme","salmonRed","doveGray","Details","concreteGray","SummaryWrapperContainer","flexRowNoWrap","royalBlue","ColoredDropup","isError","highSlippageWarning","rest","ColoredDropdown","ContextualInfo","state","showDetails","this","renderTransactionDetails","openDetailsText","closeDetailsText","contextualInfo","onClick","ReactGA","event","category","action","label","setState","prevState","renderDetails","Component","defaultProps","ALLOWED_SLIPPAGE","ethers","utils","bigNumberify","GAS_MARGIN","BlueSpan","span","DownArrowBackground","DownArrow","ArrowDown","active","RemoveLiquidityOutput","RemoveLiquidityOutputText","RemoveLiquidityOutputPlus","SummaryPanel","flexColumnNoWrap","LastSummaryText","ExchangeRateWrapper","ExchangeRate","Flex","getExchangeRate","inputValue","inputDecimals","outputValue","outputDecimals","invert","factor","pow","mul","calculateSlippageBounds","value","offset","minimum","sub","maximum","add","lt","constants","Zero","gt","MaxUint256","RemoveLiquidity","params","t","useTranslation","useWeb3React","library","account","addTransaction","useTransactionAdder","useEffect","createBrowserHistory","push","window","location","pathname","useState","poolTokenAddress","outputCurrency","setOutputCurrency","poolTokenAmount","setValue","inputError","setInputError","valueParsed","setValueParsed","parsedValue","parseUnits","useTokenDetails","symbol","decimals","exchangeAddress","totalPoolTokens","setTotalPoolTokens","poolTokenBalance","useAddressBalance","exchangeETHBalance","exchangeTokenBalance","exchange","useExchangeContract","ownershipPercentage","isZero","undefined","ownershipPercentageFormatted","amountFormatter","ETHOwnShare","TokenOwnShare","ETHPer","tokenPer","ethWithdrawn","tokenWithdrawn","ethWithdrawnMin","tokenWithdrawnMin","fetchPoolTokens","useCallback","totalSupply","then","on","removeListener","ethPrice","useETHPriceInUSD","a","usdTransactionSize","deadline","Math","ceil","Date","now","estimate","removeLiquidity","estimatedGasLimit","gasLimit","calculateGasMargin","response","b","text","min","isActive","isValid","marketRate","reserveETH","reserveToken","getMarketRate","title","extraText","formatBalance","extraTextClickHander","valueToSet","onCurrencySelected","onValueChange","errorMessage","selectedTokenAddress","alt","description","key","renderInput","disableTokenSelect","disableUnlock","hideBottom","renderSummary","disabled"],"mappings":"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","file":"static/js/10.a05cec2a.chunk.js","sourcesContent":["import React from 'react'\n\nconst SVGArrowDown = props => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 9 10\" fill=\"currentColor\" {...props}>\n    <path\n      d=\"M5.298 0H4.24v7.911h-.075L1.256 4.932l-.717.735L4.769 10 9 5.667l-.718-.735-2.908 2.979h-.076V0z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n)\n\nexport default SVGArrowDown\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport ReactGA from 'react-ga'\nimport { ReactComponent as Dropup } from '../../assets/images/dropup-blue.svg'\nimport { ReactComponent as Dropdown } from '../../assets/images/dropdown-blue.svg'\n\nconst SummaryWrapper = styled.div`\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.doveGray)};\n  font-size: 0.75rem;\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n`\n\nconst Details = styled.div`\n  background-color: ${({ theme }) => theme.concreteGray};\n  padding: 1.5rem;\n  border-radius: 1rem;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n`\n\nconst SummaryWrapperContainer = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  color: ${({ theme }) => theme.royalBlue};\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.75rem;\n\n  span {\n    margin-right: 12px;\n  }\n\n  img {\n    height: 0.75rem;\n    width: 0.75rem;\n  }\n`\n\nconst WrappedDropup = ({ isError, highSlippageWarning, ...rest }) => <Dropup {...rest} />\nconst ColoredDropup = styled(WrappedDropup)`\n  path {\n    stroke: ${({ theme }) => theme.royalBlue};\n  }\n`\n\nconst WrappedDropdown = ({ isError, highSlippageWarning, ...rest }) => <Dropdown {...rest} />\nconst ColoredDropdown = styled(WrappedDropdown)`\n  path {\n    stroke: ${({ theme }) => theme.royalBlue};\n  }\n`\n\nclass ContextualInfo extends Component {\n  static propTypes = {\n    openDetailsText: PropTypes.string,\n    renderTransactionDetails: PropTypes.func,\n    contextualInfo: PropTypes.string,\n    isError: PropTypes.bool\n  }\n\n  static defaultProps = {\n    openDetailsText: 'Advanced Details',\n    closeDetailsText: 'Hide Advanced',\n    renderTransactionDetails() {},\n    contextualInfo: '',\n    isError: false\n  }\n\n  state = {\n    showDetails: false\n  }\n\n  renderDetails() {\n    if (!this.state.showDetails) {\n      return null\n    }\n\n    return <Details>{this.props.renderTransactionDetails()}</Details>\n  }\n\n  render() {\n    const { openDetailsText, closeDetailsText, contextualInfo, isError } = this.props\n\n    if (contextualInfo) {\n      return <SummaryWrapper error={isError}>{contextualInfo}</SummaryWrapper>\n    }\n\n    return (\n      <>\n        <SummaryWrapperContainer\n          onClick={() => {\n            !this.state.showDetails &&\n              ReactGA.event({\n                category: 'Advanced Interaction',\n                action: 'Open Advanced Details',\n                label: 'Pool Page Details'\n              })\n            this.setState(prevState => {\n              return { showDetails: !prevState.showDetails }\n            })\n          }}\n        >\n          {!this.state.showDetails ? (\n            <>\n              <span>{openDetailsText}</span>\n              <ColoredDropup />\n            </>\n          ) : (\n            <>\n              <span>{closeDetailsText}</span>\n              <ColoredDropdown />\n            </>\n          )}\n        </SummaryWrapperContainer>\n        {this.renderDetails()}\n      </>\n    )\n  }\n}\n\nexport default ContextualInfo\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport ReactGA from 'react-ga'\nimport { createBrowserHistory } from 'history'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\n\nimport { useWeb3React, useExchangeContract } from '../../hooks'\nimport { Button } from '../../theme'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport ContextualInfo from '../../components/ContextualInfo'\nimport OversizedPanel from '../../components/OversizedPanel'\nimport ArrowDown from '../../assets/svg/SVGArrowDown'\nimport { useTransactionAdder } from '../../contexts/Transactions'\nimport { useTokenDetails } from '../../contexts/Tokens'\nimport { useAddressBalance, useETHPriceInUSD } from '../../contexts/Balances'\nimport { calculateGasMargin, amountFormatter } from '../../utils'\n\n// denominated in bips\nconst ALLOWED_SLIPPAGE = ethers.utils.bigNumberify(200)\n\n// denominated in seconds\nconst DEADLINE_FROM_NOW = 60 * 15\n\n// denominated in bips\nconst GAS_MARGIN = ethers.utils.bigNumberify(1000)\n\nconst BlueSpan = styled.span`\n  color: ${({ theme }) => theme.royalBlue};\n`\n\nconst DownArrowBackground = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n`\n\nconst DownArrow = styled(ArrowDown)`\n  ${({ theme }) => theme.flexRowNoWrap}\n  color: ${({ theme, active }) => (active ? theme.royalBlue : theme.doveGray)};\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n  padding: 0.875rem;\n`\n\nconst RemoveLiquidityOutput = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  min-height: 3.5rem;\n`\n\nconst RemoveLiquidityOutputText = styled.div`\n  font-size: 1.25rem;\n  line-height: 1.5rem;\n  padding: 1rem 0.75rem;\n`\n\nconst RemoveLiquidityOutputPlus = styled.div`\n  font-size: 1.25rem;\n  line-height: 1.5rem;\n  padding: 1rem 0;\n`\n\nconst SummaryPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  padding: 1rem 0;\n`\n\nconst LastSummaryText = styled.div`\n  margin-top: 1rem;\n`\n\nconst ExchangeRateWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  padding: 0.25rem 1rem 0;\n`\n\nconst ExchangeRate = styled.span`\n  flex: 1 1 auto;\n  width: 0;\n  color: ${({ theme }) => theme.doveGray};\n`\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 2rem;\n\n  button {\n    max-width: 20rem;\n  }\n`\n\nfunction getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n  try {\n    if (\n      inputValue &&\n      (inputDecimals || inputDecimals === 0) &&\n      outputValue &&\n      (outputDecimals || outputDecimals === 0)\n    ) {\n      const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\n\n      if (invert) {\n        return inputValue\n          .mul(factor)\n          .div(outputValue)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n      } else {\n        return outputValue\n          .mul(factor)\n          .div(inputValue)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n      }\n    }\n  } catch {}\n}\n\nfunction getMarketRate(reserveETH, reserveToken, decimals, invert = false) {\n  return getExchangeRate(reserveETH, 18, reserveToken, decimals, invert)\n}\n\nfunction calculateSlippageBounds(value) {\n  if (value) {\n    const offset = value.mul(ALLOWED_SLIPPAGE).div(ethers.utils.bigNumberify(10000))\n    const minimum = value.sub(offset)\n    const maximum = value.add(offset)\n    return {\n      minimum: minimum.lt(ethers.constants.Zero) ? ethers.constants.Zero : minimum,\n      maximum: maximum.gt(ethers.constants.MaxUint256) ? ethers.constants.MaxUint256 : maximum\n    }\n  } else {\n    return {}\n  }\n}\n\nexport default function RemoveLiquidity({ params }) {\n  const { t } = useTranslation()\n  const { library, account, active } = useWeb3React()\n\n  const addTransaction = useTransactionAdder()\n\n  // clear url of query\n  useEffect(() => {\n    const history = createBrowserHistory()\n    history.push(window.location.pathname + '')\n  }, [])\n\n  const [outputCurrency, setOutputCurrency] = useState(params.poolTokenAddress)\n  const [value, setValue] = useState(params.poolTokenAmount ? params.poolTokenAmount : '')\n  const [inputError, setInputError] = useState()\n  const [valueParsed, setValueParsed] = useState()\n  // parse value\n  useEffect(() => {\n    try {\n      const parsedValue = ethers.utils.parseUnits(value, 18)\n      setValueParsed(parsedValue)\n    } catch {\n      if (value !== '') {\n        setInputError(t('inputNotValid'))\n      }\n    }\n\n    return () => {\n      setInputError()\n      setValueParsed()\n    }\n  }, [t, value])\n\n  const { symbol, decimals, exchangeAddress } = useTokenDetails(outputCurrency)\n\n  const [totalPoolTokens, setTotalPoolTokens] = useState()\n  const poolTokenBalance = useAddressBalance(account, exchangeAddress)\n  const exchangeETHBalance = useAddressBalance(exchangeAddress, 'ETH')\n  const exchangeTokenBalance = useAddressBalance(exchangeAddress, outputCurrency)\n\n  // input validation\n  useEffect(() => {\n    if (valueParsed && poolTokenBalance) {\n      if (valueParsed.gt(poolTokenBalance)) {\n        setInputError(t('insufficientBalance'))\n      } else {\n        setInputError(null)\n      }\n    }\n  }, [poolTokenBalance, t, valueParsed])\n\n  const exchange = useExchangeContract(exchangeAddress)\n\n  const ownershipPercentage =\n    poolTokenBalance && totalPoolTokens && !totalPoolTokens.isZero()\n      ? poolTokenBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\n      : undefined\n  const ownershipPercentageFormatted = ownershipPercentage && amountFormatter(ownershipPercentage, 16, 4)\n\n  const ETHOwnShare =\n    exchangeETHBalance &&\n    ownershipPercentage &&\n    exchangeETHBalance.mul(ownershipPercentage).div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n  const TokenOwnShare =\n    exchangeTokenBalance &&\n    ownershipPercentage &&\n    exchangeTokenBalance.mul(ownershipPercentage).div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n\n  const ETHPer =\n    exchangeETHBalance && totalPoolTokens && !totalPoolTokens.isZero()\n      ? exchangeETHBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\n      : undefined\n  const tokenPer =\n    exchangeTokenBalance && totalPoolTokens && !totalPoolTokens.isZero()\n      ? exchangeTokenBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\n      : undefined\n\n  const ethWithdrawn =\n    ETHPer && valueParsed\n      ? ETHPer.mul(valueParsed).div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n      : undefined\n  const tokenWithdrawn =\n    tokenPer && valueParsed\n      ? tokenPer.mul(valueParsed).div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n      : undefined\n\n  const ethWithdrawnMin = ethWithdrawn ? calculateSlippageBounds(ethWithdrawn).minimum : undefined\n  const tokenWithdrawnMin = tokenWithdrawn ? calculateSlippageBounds(tokenWithdrawn).minimum : undefined\n\n  const fetchPoolTokens = useCallback(() => {\n    if (exchange) {\n      exchange.totalSupply().then(totalSupply => {\n        setTotalPoolTokens(totalSupply)\n      })\n    }\n  }, [exchange])\n  useEffect(() => {\n    fetchPoolTokens()\n    library.on('block', fetchPoolTokens)\n\n    return () => {\n      library.removeListener('block', fetchPoolTokens)\n    }\n  }, [fetchPoolTokens, library])\n\n  // BigNumber.js instance\n  const ethPrice = useETHPriceInUSD()\n\n  async function onRemoveLiquidity() {\n    // take ETH amount, multiplied by ETH rate and 2 for total tx size\n    let usdTransactionSize = ethPrice * (ethWithdrawn / 1e18) * 2\n    ReactGA.event({\n      category: 'Transaction',\n      action: 'Remove Liquidity',\n      label: outputCurrency,\n      value: usdTransactionSize\n    })\n\n    const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW\n\n    const estimatedGasLimit = await exchange.estimate.removeLiquidity(\n      valueParsed,\n      ethWithdrawnMin,\n      tokenWithdrawnMin,\n      deadline\n    )\n\n    exchange\n      .removeLiquidity(valueParsed, ethWithdrawnMin, tokenWithdrawnMin, deadline, {\n        gasLimit: calculateGasMargin(estimatedGasLimit, GAS_MARGIN)\n      })\n      .then(response => {\n        addTransaction(response)\n      })\n  }\n\n  const b = text => <BlueSpan>{text}</BlueSpan>\n\n  function renderTransactionDetails() {\n    return (\n      <div>\n        <div>\n          {t('youAreRemoving')} {b(`${amountFormatter(ethWithdrawn, 18, 4)} ETH`)} {t('and')}{' '}\n          {b(`${amountFormatter(tokenWithdrawn, decimals, Math.min(decimals, 4))} ${symbol}`)} {t('outPool')}\n        </div>\n        <LastSummaryText>\n          {t('youWillRemove')} {b(amountFormatter(valueParsed, 18, 4))} {t('liquidityTokens')}\n        </LastSummaryText>\n        <LastSummaryText>\n          {t('totalSupplyIs')} {b(amountFormatter(totalPoolTokens, 18, 4))}\n        </LastSummaryText>\n        <LastSummaryText>\n          {t('tokenWorth')} {b(amountFormatter(ETHPer, 18, 4))} ETH {t('and')}{' '}\n          {b(amountFormatter(tokenPer, decimals, Math.min(4, decimals)))} {symbol}\n        </LastSummaryText>\n      </div>\n    )\n  }\n\n  function renderSummary() {\n    let contextualInfo = ''\n    let isError = false\n\n    if (inputError) {\n      contextualInfo = inputError\n      isError = true\n    } else if (!outputCurrency || outputCurrency === 'ETH') {\n      contextualInfo = t('selectTokenCont')\n    } else if (!valueParsed) {\n      contextualInfo = t('enterValueCont')\n    } else if (!account) {\n      contextualInfo = t('noWallet')\n      isError = true\n    }\n\n    return (\n      <ContextualInfo\n        key=\"context-info\"\n        openDetailsText={t('transactionDetails')}\n        closeDetailsText={t('hideDetails')}\n        contextualInfo={contextualInfo}\n        isError={isError}\n        renderTransactionDetails={renderTransactionDetails}\n      />\n    )\n  }\n\n  function formatBalance(value) {\n    return `Balance: ${value}`\n  }\n\n  const isActive = active && account\n  const isValid = inputError === null\n\n  const marketRate = getMarketRate(exchangeETHBalance, exchangeTokenBalance, decimals)\n\n  return (\n    <>\n      <CurrencyInputPanel\n        title={t('poolTokens')}\n        extraText={poolTokenBalance && formatBalance(amountFormatter(poolTokenBalance, 18, 4))}\n        extraTextClickHander={() => {\n          if (poolTokenBalance) {\n            const valueToSet = poolTokenBalance\n            if (valueToSet.gt(ethers.constants.Zero)) {\n              setValue(amountFormatter(valueToSet, 18, 18, false))\n            }\n          }\n        }}\n        onCurrencySelected={setOutputCurrency}\n        onValueChange={setValue}\n        value={value}\n        errorMessage={inputError}\n        selectedTokenAddress={outputCurrency}\n      />\n      <OversizedPanel>\n        <DownArrowBackground>\n          <DownArrow active={isActive} alt=\"arrow\" />\n        </DownArrowBackground>\n      </OversizedPanel>\n      <CurrencyInputPanel\n        title={t('output')}\n        description={!!(ethWithdrawn && tokenWithdrawn) ? `(${t('estimated')})` : ''}\n        key=\"remove-liquidity-input\"\n        renderInput={() =>\n          !!(ethWithdrawn && tokenWithdrawn) ? (\n            <RemoveLiquidityOutput>\n              <RemoveLiquidityOutputText>\n                {`${amountFormatter(ethWithdrawn, 18, 4, false)} ETH`}\n              </RemoveLiquidityOutputText>\n              <RemoveLiquidityOutputPlus> + </RemoveLiquidityOutputPlus>\n              <RemoveLiquidityOutputText>\n                {`${amountFormatter(tokenWithdrawn, decimals, Math.min(4, decimals))} ${symbol}`}\n              </RemoveLiquidityOutputText>\n            </RemoveLiquidityOutput>\n          ) : (\n            <RemoveLiquidityOutput />\n          )\n        }\n        disableTokenSelect\n        disableUnlock\n      />\n      <OversizedPanel key=\"remove-liquidity-input-under\" hideBottom>\n        <SummaryPanel>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('exchangeRate')}</ExchangeRate>\n            {marketRate ? <span>{`1 ETH = ${amountFormatter(marketRate, 18, 4)} ${symbol}`}</span> : ' - '}\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('currentPoolSize')}</ExchangeRate>\n            {exchangeETHBalance && exchangeTokenBalance && (decimals || decimals === 0) ? (\n              <span>{`${amountFormatter(exchangeETHBalance, 18, 4)} ETH + ${amountFormatter(\n                exchangeTokenBalance,\n                decimals,\n                Math.min(decimals, 4)\n              )} ${symbol}`}</span>\n            ) : (\n              ' - '\n            )}\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>\n              {t('yourPoolShare')} ({ownershipPercentageFormatted && ownershipPercentageFormatted}%)\n            </ExchangeRate>\n            {ETHOwnShare && TokenOwnShare ? (\n              <span>\n                {`${amountFormatter(ETHOwnShare, 18, 4)} ETH + ${amountFormatter(\n                  TokenOwnShare,\n                  decimals,\n                  Math.min(decimals, 4)\n                )} ${symbol}`}\n              </span>\n            ) : (\n              ' - '\n            )}\n          </ExchangeRateWrapper>\n        </SummaryPanel>\n      </OversizedPanel>\n      {renderSummary()}\n      <Flex>\n        <Button disabled={!isValid} onClick={onRemoveLiquidity}>\n          {t('removeLiquidity')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n"],"sourceRoot":""}